{
  "guid": "500e074f-96d8-4c3c-b482-564faad83696",
  "name": "Chapter  12",
  "categories": [ "Toolkit/Publication: Data Parallel C++" ],
  "description": "Chapter 12 source code examples: Device Information | fig_12_1_assigned_device.cpp * Figure 12-1. Device we have been assigned by default | fig_12_2_try_catch.cpp * Figure 12-2. Using try-catch to select a GPU device if possible, host device if not | fig_12_3_device_selector.cpp * Figure 12-3. Custom device selectorâ€”our preferred solution | fig_12_4_curious.cpp * Figure 12-4. Simple use of device query mechanisms: curious.cpp | fig_12_6_very_curious.cpp * Figure 12-6. More detailed use of device query mechanisms: verycurious.cpp | fig_12_7_invocation_parameters.cpp * Figure 12-7. Fetching parameters that can be used to shape a kernel",
  "toolchain": [ "dpcpp" ],
  "languages": [ { "cpp": {} } ],
  "targetDevice": [ "CPU", "GPU" ],
  "os": [ "linux", "windows" ],
  "builder": [ "ide", "cmake" ],
  "commonFolder": {
    "base": "..",
    "include": [
      "Ch12_device_information",
      "LICENSE.txt",
      "README.md",
      "CMakeLists.txt"
    ],
    "exclude": [
      "sample-folder-name/test.sh"
    ]
   },
   "ciTests": {
    "linux": [
      {
        "steps": [
          "mkdir build",
          "cd build",
          "cmake ..",
          "make",
          "make run"
        ]
      }
    ],
    "windows": [
      {
        "steps": [
          "mkdir build",
          "cd build",
          "cmake -G Ninja ..",
          "ninja"
        ]
      }
    ]
  }
}